@Library('SharedLibraries') _
 
pipeline {
    agent { label 'ansible-latest' }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
    }
    parameters {
        choice(name: 'Update_Job_Config', choices:"Yes\nNo", description: "Do you want to do a dry run to update job to latest version and grab parameters?" )        
        choice(name: 'Site', choices:"Rueil\nNormandie", description: "Deployment Site")
        string(name: 'VMName', defaultValue: '172.31.46.181', description: 'Name of Reporting VM')
    }
    stages {
            stage('Updating Job Config') {
            steps {
                script {
                    if ("${params.Update_Job_Config}" == "Yes") {
                        currentBuild.result = 'ABORTED'
                        error('DRY RUN COMPLETED. JOB UPDATED TO LATEST VERSION AND PARAMETERIZED.')
                    }
                }
            }
        }
        stage('Get Virtual Machine') {
            steps {
                script {
                    virtualMachine = vmwareGetVirtualMachine name: "${params.VMName}", site: "${params.Site}"
                }
            }
        }
        
       stage('Install Files on ext server ') {
           steps {
               script {
                   ansiblePlaybook credentialsId: 'Ansible-default-key', extras:  " -e SITE=${params.Site} -e BEI_IPS=${virtualMachine.network[1].secondaryAddress}", disableHostKeyChecking: true, playbook: 'install_ext.yml'
               }
           }
       }
    }
}
